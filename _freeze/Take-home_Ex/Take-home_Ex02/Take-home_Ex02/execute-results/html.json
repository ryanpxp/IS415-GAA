{
  "hash": "c29dbc6376d0019f699589d83c139db3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 02\"\nauthor: \"Ryan Peh\"\ndate: \"September 25, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# **Take-home Exercise 2: Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level**\n\n## Background\n\nDrug abuse is associated with significant negative health, financial and social consequences. Yet, illicit drug consumption remains highly prevalent and continues to be a growing problem worldwide. In 2021, 1 in 17 people aged 15–64 in the world had used a drug in the past 12 months. Notwithstanding population growth, the estimated number of drug users grew from 240 million in 2011 to 296 million in 2021.\n\nThe geopolitics of Thailand which is near the [Golden Triangle](https://en.wikipedia.org/wiki/Golden_Triangle_(Southeast_Asia)) of Indochina, the largest drug production site in Asia, and the constant transportation infrastructure development made Thailand became market and transit routes for drug trafficking to the third countries.\n\nIn Thailand, drug abuse is one of the major social issue. There are about 2.7 million youths using drugs in Thailand. Among youths aged between 15 and 19 years, there are about 300,000 who have needs for drug treatment. Most of Thai youths involved with drugs are vocational-school students, which nearly doubles in number compared to secondary-school students.\n\n## **Objectives**\n\nAs a curious geospatial analytics green horn, you are interested to discover:\n\n-   if the key indicators of drug abuse of Thailand are independent from space.\n\n-   If the indicators of drug abuse is indeed spatial dependent, then, you would like to detect where are the clusters and outliers, and the hotspots.\n\n-   Last but not least, you are also interested to investigate how the observation above evolve over time.\n\n## **The Task**\n\nThe specific tasks of this take-home exercise are as follows:\n\n-   Using appropriate function of **sf** and **tidyverse**, preparing the following geospatial data layer:\n\n    -   a study area layer in sf polygon features. It must be at [province level](https://en.wikipedia.org/wiki/Provinces_of_Thailand) (including Bangkok) of Thailand.\n\n    -   a drug abuse indicators layer within the study area in sf polygon features.\n\n-   Using the extracted data, perform global spatial autocorrelation analysis by using [sfdep methods](https://is415-gaa-tskam.netlify.app/in-class_ex/in-class_ex05/in-class_ex05-glsa).\n\n-   Using the extracted data, perform local spatial autocorrelation analysis by using [sfdep methods](https://r4gdsa.netlify.app/chap10.html).\n\n-   Describe the spatial patterns revealed by the analysis above.\n\n## **The Data**\n\nFor the purpose of this take-home exercise, two data sets shall be used, they are:\n\n-   [Thailand Drug Offenses \\[2017-2022\\]](https://www.kaggle.com/datasets/thaweewatboy/thailand-drug-offenses-2017-2022) at Kaggle.\n\n-   [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) at HDX. You are required to use the province boundary data set.\n\n## Importing Package\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sfdep, tmap, tidyverse)\n```\n:::\n\n\n### Geospatial data\n\n::: {.cell}\n\n```{.r .cell-code}\nthai <- st_read(dsn = \"data/raw/Thailand_shp\", \n                 layer = \"tha_admbnda_adm1_rtsd_20220121\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\ryanpxp\\IS415-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\raw\\Thailand_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n### Study area\n\n![Breakdown of Provinces of Thailand](data\\raw\\Thailand_provinces_en.svg.png){width=100% style=\"object-fit: contain;\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(thai) + \n  tm_fill(\"ADM1_EN\",\n          title = \"Study Area: Thailand Provinces\",\n          palette = \"inferno\") +\n  tm_borders() +\n  tm_layout(legend.show = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Number of levels of the variable \"ADM1_EN\" is 77, which is larger than\nmax.categories (which is 30), so levels are combined. Set\ntmap_options(max.categories = 77) in the layer function to show all levels.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n### checks for holes\n\n::: {.cell}\n\n```{.r .cell-code}\nu_thai <- st_union(thai)\nplot(u_thai)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### Aspatial Data\n\n::: {.cell}\n\n```{.r .cell-code}\ndrugs <- read_csv(\"data/raw/thai_drug_offenses_2017_2022.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 7392 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): types_of_drug_offenses, province_th, province_en\ndbl (2): fiscal_year, no_cases\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n## Mismatched Province\n\nBy checking on the naming of the province from both the geospatial and aspatial data, we can see that some of the namings are mismatched. This would cause problems when handling the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncomparison_df <- data.frame(\n  Geospatial = sort(unique(thai$ADM1_EN)),\n  Aspatial = sort(unique(drugs$province_en))\n)\n\nprint(comparison_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                 Geospatial                 Aspatial\n1             Amnat Charoen            Amnat Charoen\n2                 Ang Thong                Ang Thong\n3                   Bangkok                  Bangkok\n4                 Bueng Kan                  buogkan\n5                  Buri Ram                 Buri Ram\n6              Chachoengsao             Chachoengsao\n7                  Chai Nat                 Chai Nat\n8                Chaiyaphum               Chaiyaphum\n9               Chanthaburi              Chanthaburi\n10               Chiang Mai               Chiang Mai\n11               Chiang Rai               Chiang Rai\n12                Chon Buri                Chon Buri\n13                 Chumphon                 Chumphon\n14                  Kalasin                  Kalasin\n15           Kamphaeng Phet           Kamphaeng Phet\n16             Kanchanaburi             Kanchanaburi\n17                Khon Kaen                Khon Kaen\n18                    Krabi                    Krabi\n19                  Lampang                  Lampang\n20                  Lamphun                  Lamphun\n21                     Loei                   Loburi\n22                 Lop Buri                     Loei\n23             Mae Hong Son             Mae Hong Son\n24            Maha Sarakham            Maha Sarakham\n25                 Mukdahan                 Mukdahan\n26             Nakhon Nayok             Nakhon Nayok\n27            Nakhon Pathom            Nakhon Pathom\n28            Nakhon Phanom            Nakhon Phanom\n29        Nakhon Ratchasima        Nakhon Ratchasima\n30             Nakhon Sawan             Nakhon Sawan\n31      Nakhon Si Thammarat      Nakhon Si Thammarat\n32                      Nan                      Nan\n33               Narathiwat               Narathiwat\n34         Nong Bua Lam Phu         Nong Bua Lam Phu\n35                Nong Khai                Nong Khai\n36               Nonthaburi               Nonthaburi\n37             Pathum Thani             Pathum Thani\n38                  Pattani                  Pattani\n39                 Phangnga                 Phangnga\n40              Phatthalung              Phatthalung\n41                   Phayao                   Phayao\n42               Phetchabun               Phetchabun\n43              Phetchaburi              Phetchaburi\n44                  Phichit                  Phichit\n45              Phitsanulok              Phitsanulok\n46 Phra Nakhon Si Ayutthaya Phra Nakhon Si Ayutthaya\n47                    Phrae                    Phrae\n48                   Phuket                   Phuket\n49             Prachin Buri             Prachin Buri\n50      Prachuap Khiri Khan      Prachuap Khiri Khan\n51                   Ranong                   Ranong\n52               Ratchaburi               Ratchaburi\n53                   Rayong                   Rayong\n54                   Roi Et                   Roi Et\n55                  Sa Kaeo                  Sa Kaeo\n56             Sakon Nakhon             Sakon Nakhon\n57             Samut Prakan             Samut Prakan\n58             Samut Sakhon             Samut Sakhon\n59          Samut Songkhram          Samut Songkhram\n60                 Saraburi                 Saraburi\n61                    Satun                    Satun\n62                Si Sa Ket                Si Sa Ket\n63                Sing Buri                Sing Buri\n64                 Songkhla                 Songkhla\n65                Sukhothai                Sukhothai\n66              Suphan Buri              Suphan Buri\n67              Surat Thani              Surat Thani\n68                    Surin                    Surin\n69                      Tak                      Tak\n70                    Trang                    Trang\n71                     Trat                     Trat\n72         Ubon Ratchathani         Ubon Ratchathani\n73               Udon Thani               Udon Thani\n74              Uthai Thani              Uthai Thani\n75                Uttaradit                Uttaradit\n76                     Yala                     Yala\n77                 Yasothon                 Yasothon\n```\n\n\n:::\n:::\n\n\nThe identified mismatches are:\n\n| Geospatial | Aspatial |\n|------------|----------|\n| Bueng Kan  | buogkan  |\n| Lop Buri   | Loburi   |\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrugs <- drugs %>%\n  mutate(province_en = recode(province_en,\n                              \"buogkan\" = \"Bueng Kan\",\n                              \"Loburi\" = \"Lop Buri\"))\n\nprint(sort(unique(drugs$province_en)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Amnat Charoen\"            \"Ang Thong\"               \n [3] \"Bangkok\"                  \"Bueng Kan\"               \n [5] \"Buri Ram\"                 \"Chachoengsao\"            \n [7] \"Chai Nat\"                 \"Chaiyaphum\"              \n [9] \"Chanthaburi\"              \"Chiang Mai\"              \n[11] \"Chiang Rai\"               \"Chon Buri\"               \n[13] \"Chumphon\"                 \"Kalasin\"                 \n[15] \"Kamphaeng Phet\"           \"Kanchanaburi\"            \n[17] \"Khon Kaen\"                \"Krabi\"                   \n[19] \"Lampang\"                  \"Lamphun\"                 \n[21] \"Loei\"                     \"Lop Buri\"                \n[23] \"Mae Hong Son\"             \"Maha Sarakham\"           \n[25] \"Mukdahan\"                 \"Nakhon Nayok\"            \n[27] \"Nakhon Pathom\"            \"Nakhon Phanom\"           \n[29] \"Nakhon Ratchasima\"        \"Nakhon Sawan\"            \n[31] \"Nakhon Si Thammarat\"      \"Nan\"                     \n[33] \"Narathiwat\"               \"Nong Bua Lam Phu\"        \n[35] \"Nong Khai\"                \"Nonthaburi\"              \n[37] \"Pathum Thani\"             \"Pattani\"                 \n[39] \"Phangnga\"                 \"Phatthalung\"             \n[41] \"Phayao\"                   \"Phetchabun\"              \n[43] \"Phetchaburi\"              \"Phichit\"                 \n[45] \"Phitsanulok\"              \"Phra Nakhon Si Ayutthaya\"\n[47] \"Phrae\"                    \"Phuket\"                  \n[49] \"Prachin Buri\"             \"Prachuap Khiri Khan\"     \n[51] \"Ranong\"                   \"Ratchaburi\"              \n[53] \"Rayong\"                   \"Roi Et\"                  \n[55] \"Sa Kaeo\"                  \"Sakon Nakhon\"            \n[57] \"Samut Prakan\"             \"Samut Sakhon\"            \n[59] \"Samut Songkhram\"          \"Saraburi\"                \n[61] \"Satun\"                    \"Si Sa Ket\"               \n[63] \"Sing Buri\"                \"Songkhla\"                \n[65] \"Sukhothai\"                \"Suphan Buri\"             \n[67] \"Surat Thani\"              \"Surin\"                   \n[69] \"Tak\"                      \"Trang\"                   \n[71] \"Trat\"                     \"Ubon Ratchathani\"        \n[73] \"Udon Thani\"               \"Uthai Thani\"             \n[75] \"Uttaradit\"                \"Yala\"                    \n[77] \"Yasothon\"                \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\noffense_types <- c(\"drug_use_cases\", \"suspects_in_drug_use_cases\")\n\ndrugs_by_year <- list()\n\nfor (year in 2017:2022) {\n  drugs_by_year[[as.character(year)]] <- left_join(thai, drugs, by = c(\"ADM1_EN\" = \"province_en\")) %>%\n    dplyr::select(1:3, 17:19,21) %>%\n    filter(fiscal_year == year, types_of_drug_offenses %in% offense_types)\n}\n\nglimpse(drugs_by_year[[\"2018\"]])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 154\nColumns: 7\n$ Shape_Leng             <dbl> 2.417227, 2.417227, 1.695100, 1.695100, 1.25111…\n$ Shape_Area             <dbl> 0.13133873, 0.13133873, 0.07926199, 0.07926199,…\n$ ADM1_EN                <chr> \"Bangkok\", \"Bangkok\", \"Samut Prakan\", \"Samut Pr…\n$ fiscal_year            <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,…\n$ types_of_drug_offenses <chr> \"drug_use_cases\", \"suspects_in_drug_use_cases\",…\n$ no_cases               <dbl> 16480, 17131, 3015, 3029, 1661, 1712, 1823, 182…\n$ geometry               <MULTIPOLYGON [°]> MULTIPOLYGON (((100.6139 13..., MU…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (year in 2017:2022) {\n  map <- tm_shape(drugs_by_year[[as.character(year)]]) +\n    tm_fill(\"no_cases\",\n            n = 5,\n            style = \"equal\") +  \n    tm_borders(alpha = 0.5) +\n    tm_layout(main.title = paste(\"Equal interval classification - Fiscal Year\", year))\n  \n  print(map)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.61, 0.61, 0.61, 0.56. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.61, 0.56, 0.52, 0.52. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.61, 0.61, 0.56, 0.52. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-9-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.61, 0.61, 0.61, 0.61. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-9-4.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.61, 0.61, 0.61, 0.56. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-9-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.61, 0.61, 0.61, 0.61. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-9-6.png){width=672}\n:::\n:::\n\n## Just 2017\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q2017 <- drugs_by_year[[\"2017\"]] %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `nb = st_contiguity(geometry)`.\nCaused by warning in `spdep::poly2nb()`:\n! neighbour object has 2 sub-graphs;\nif this sub-graph count seems unexpected, try increasing the snap argument.\n```\n\n\n:::\n:::\n\n## 2017 to 2022\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (year in 2017:2022) {\n  wm_q <- drugs_by_year[[as.character(year)]] %>%\n    mutate(nb = st_contiguity(geometry),\n           wt = st_weights(nb, style = \"W\"),\n           .before = 1)\n  \n  moran_results[[as.character(year)]]$weights <- wm_q\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n  moranI <- global_moran(moran_results[[as.character(year)]]$weights$no_cases,\n                         moran_results[[as.character(year)]]$weights$nb,\n                         moran_results[[as.character(year)]]$weights$wt)\n  \n  # Store global Moran's I results\n  moran_results[[as.character(year)]]$global_moran <- moranI\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI2017 <- global_moran(wm_q2017$no_cases,\n                       wm_q2017$nb,\n                       wm_q2017$wt)\nglimpse(moranI2017)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num 0.164\n $ K: num 31.1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q2017$no_cases,\n                       wm_q2017$nb,\n                       wm_q2017$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.16429, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- wm_q2017 %>% \n  mutate(local_moran = local_moran(\n    no_cases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of No of cases\",\n            main.title.size = 1.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}