{
  "hash": "bb931132c48f870609c4e3c4fee8db08",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 02\"\nauthor: \"Ryan Peh\"\ndate: \"September 25, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# **Take-home Exercise 2: Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level**\n\n## Background\n\nDrug abuse is associated with significant negative health, financial and social consequences. Yet, illicit drug consumption remains highly prevalent and continues to be a growing problem worldwide. In 2021, 1 in 17 people aged 15–64 in the world had used a drug in the past 12 months. Notwithstanding population growth, the estimated number of drug users grew from 240 million in 2011 to 296 million in 2021.\n\nThe geopolitics of Thailand which is near the [Golden Triangle](https://en.wikipedia.org/wiki/Golden_Triangle_(Southeast_Asia)) of Indochina, the largest drug production site in Asia, and the constant transportation infrastructure development made Thailand became market and transit routes for drug trafficking to the third countries.\n\nIn Thailand, drug abuse is one of the major social issue. There are about 2.7 million youths using drugs in Thailand. Among youths aged between 15 and 19 years, there are about 300,000 who have needs for drug treatment. Most of Thai youths involved with drugs are vocational-school students, which nearly doubles in number compared to secondary-school students.\n\n## **Objectives**\n\nAs a curious geospatial analytics green horn, you are interested to discover:\n\n-   if the key indicators of drug abuse of Thailand are independent from space.\n\n-   If the indicators of drug abuse is indeed spatial dependent, then, to detect where are the clusters and outliers, and the hotspots.\n\n-   Last but not least, to investigate how the observation above evolve over time.\n\n## **The Task**\n\nThe specific tasks of this take-home exercise are as follows:\n\n-   Using appropriate function of **sf** and **tidyverse**, preparing the following geospatial data layer:\n\n    -   a study area layer in sf polygon features. It must be at [province level](https://en.wikipedia.org/wiki/Provinces_of_Thailand) (including Bangkok) of Thailand.\n\n    -   a drug abuse indicators layer within the study area in sf polygon features.\n\n-   Using the extracted data, perform global spatial autocorrelation analysis by using [sfdep methods](https://is415-gaa-tskam.netlify.app/in-class_ex/in-class_ex05/in-class_ex05-glsa).\n\n-   Using the extracted data, perform local spatial autocorrelation analysis by using [sfdep methods](https://r4gdsa.netlify.app/chap10.html).\n\n-   Describe the spatial patterns revealed by the analysis above.\n\n## **The Data**\n\nFor the purpose of this take-home exercise, two data sets shall be used, they are:\n\n-   [Thailand Drug Offenses \\[2017-2022\\]](https://www.kaggle.com/datasets/thaweewatboy/thailand-drug-offenses-2017-2022) at Kaggle.\n\n-   [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) at HDX. You are required to use the province boundary data set.\n\n## Importing Package\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sfdep, tmap, tidyverse)\n```\n:::\n\n\n### Geospatial data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai <- st_read(dsn = \"data/raw/Thailand_shp\", \n                 layer = \"tha_admbnda_adm1_rtsd_20220121\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\ryanpxp\\IS415-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\raw\\Thailand_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n### Study area\n\n![Breakdown of Provinces of Thailand](img\\Thailand_provinces_en.svg.png){width=\"100%\" style=\"object-fit: contain;\"}\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Number of levels of the variable \"ADM1_EN\" is 77, which is larger than\nmax.categories (which is 30), so levels are combined. Set\ntmap_options(max.categories = 77) in the layer function to show all levels.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n### checks for holes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nu_thai <- st_union(thai)\nplot(u_thai)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### Aspatial Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrugs <- read_csv(\"data/raw/thai_drug_offenses_2017_2022.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 7392 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): types_of_drug_offenses, province_th, province_en\ndbl (2): fiscal_year, no_cases\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n## Mismatched Province\n\nBy checking on the naming of the province from both the geospatial and aspatial data, we can see that some of the namings are mismatched. This would cause problems when handling the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncomparison_df <- data.frame(\n  Geospatial = sort(unique(thai$ADM1_EN)),\n  Aspatial = sort(unique(drugs$province_en))\n)\n\nprint(comparison_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                 Geospatial                 Aspatial\n1             Amnat Charoen            Amnat Charoen\n2                 Ang Thong                Ang Thong\n3                   Bangkok                  Bangkok\n4                 Bueng Kan                  buogkan\n5                  Buri Ram                 Buri Ram\n6              Chachoengsao             Chachoengsao\n7                  Chai Nat                 Chai Nat\n8                Chaiyaphum               Chaiyaphum\n9               Chanthaburi              Chanthaburi\n10               Chiang Mai               Chiang Mai\n11               Chiang Rai               Chiang Rai\n12                Chon Buri                Chon Buri\n13                 Chumphon                 Chumphon\n14                  Kalasin                  Kalasin\n15           Kamphaeng Phet           Kamphaeng Phet\n16             Kanchanaburi             Kanchanaburi\n17                Khon Kaen                Khon Kaen\n18                    Krabi                    Krabi\n19                  Lampang                  Lampang\n20                  Lamphun                  Lamphun\n21                     Loei                   Loburi\n22                 Lop Buri                     Loei\n23             Mae Hong Son             Mae Hong Son\n24            Maha Sarakham            Maha Sarakham\n25                 Mukdahan                 Mukdahan\n26             Nakhon Nayok             Nakhon Nayok\n27            Nakhon Pathom            Nakhon Pathom\n28            Nakhon Phanom            Nakhon Phanom\n29        Nakhon Ratchasima        Nakhon Ratchasima\n30             Nakhon Sawan             Nakhon Sawan\n31      Nakhon Si Thammarat      Nakhon Si Thammarat\n32                      Nan                      Nan\n33               Narathiwat               Narathiwat\n34         Nong Bua Lam Phu         Nong Bua Lam Phu\n35                Nong Khai                Nong Khai\n36               Nonthaburi               Nonthaburi\n37             Pathum Thani             Pathum Thani\n38                  Pattani                  Pattani\n39                 Phangnga                 Phangnga\n40              Phatthalung              Phatthalung\n41                   Phayao                   Phayao\n42               Phetchabun               Phetchabun\n43              Phetchaburi              Phetchaburi\n44                  Phichit                  Phichit\n45              Phitsanulok              Phitsanulok\n46 Phra Nakhon Si Ayutthaya Phra Nakhon Si Ayutthaya\n47                    Phrae                    Phrae\n48                   Phuket                   Phuket\n49             Prachin Buri             Prachin Buri\n50      Prachuap Khiri Khan      Prachuap Khiri Khan\n51                   Ranong                   Ranong\n52               Ratchaburi               Ratchaburi\n53                   Rayong                   Rayong\n54                   Roi Et                   Roi Et\n55                  Sa Kaeo                  Sa Kaeo\n56             Sakon Nakhon             Sakon Nakhon\n57             Samut Prakan             Samut Prakan\n58             Samut Sakhon             Samut Sakhon\n59          Samut Songkhram          Samut Songkhram\n60                 Saraburi                 Saraburi\n61                    Satun                    Satun\n62                Si Sa Ket                Si Sa Ket\n63                Sing Buri                Sing Buri\n64                 Songkhla                 Songkhla\n65                Sukhothai                Sukhothai\n66              Suphan Buri              Suphan Buri\n67              Surat Thani              Surat Thani\n68                    Surin                    Surin\n69                      Tak                      Tak\n70                    Trang                    Trang\n71                     Trat                     Trat\n72         Ubon Ratchathani         Ubon Ratchathani\n73               Udon Thani               Udon Thani\n74              Uthai Thani              Uthai Thani\n75                Uttaradit                Uttaradit\n76                     Yala                     Yala\n77                 Yasothon                 Yasothon\n```\n\n\n:::\n:::\n\n\nThe identified mismatches are:\n\n| Geospatial | Aspatial |\n|------------|----------|\n| Bueng Kan  | buogkan  |\n| Lop Buri   | Loburi   |\n\nWe will have to change these province names in the aspatial data to match those in the geospatial daata.\n\n::: panel-tabset\n### The code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrugs <- drugs %>%\n  mutate(province_en = recode(province_en,\n                              \"buogkan\" = \"Bueng Kan\",\n                              \"Loburi\" = \"Lop Buri\"))\n```\n:::\n\n\n### Checking the output\n\nWe can see that both **buogkan** and **Loburi** is now changed into **Bueng** **Kan** and **Lop** **Buri**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(sort(unique(drugs$province_en)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Amnat Charoen\"            \"Ang Thong\"               \n [3] \"Bangkok\"                  \"Bueng Kan\"               \n [5] \"Buri Ram\"                 \"Chachoengsao\"            \n [7] \"Chai Nat\"                 \"Chaiyaphum\"              \n [9] \"Chanthaburi\"              \"Chiang Mai\"              \n[11] \"Chiang Rai\"               \"Chon Buri\"               \n[13] \"Chumphon\"                 \"Kalasin\"                 \n[15] \"Kamphaeng Phet\"           \"Kanchanaburi\"            \n[17] \"Khon Kaen\"                \"Krabi\"                   \n[19] \"Lampang\"                  \"Lamphun\"                 \n[21] \"Loei\"                     \"Lop Buri\"                \n[23] \"Mae Hong Son\"             \"Maha Sarakham\"           \n[25] \"Mukdahan\"                 \"Nakhon Nayok\"            \n[27] \"Nakhon Pathom\"            \"Nakhon Phanom\"           \n[29] \"Nakhon Ratchasima\"        \"Nakhon Sawan\"            \n[31] \"Nakhon Si Thammarat\"      \"Nan\"                     \n[33] \"Narathiwat\"               \"Nong Bua Lam Phu\"        \n[35] \"Nong Khai\"                \"Nonthaburi\"              \n[37] \"Pathum Thani\"             \"Pattani\"                 \n[39] \"Phangnga\"                 \"Phatthalung\"             \n[41] \"Phayao\"                   \"Phetchabun\"              \n[43] \"Phetchaburi\"              \"Phichit\"                 \n[45] \"Phitsanulok\"              \"Phra Nakhon Si Ayutthaya\"\n[47] \"Phrae\"                    \"Phuket\"                  \n[49] \"Prachin Buri\"             \"Prachuap Khiri Khan\"     \n[51] \"Ranong\"                   \"Ratchaburi\"              \n[53] \"Rayong\"                   \"Roi Et\"                  \n[55] \"Sa Kaeo\"                  \"Sakon Nakhon\"            \n[57] \"Samut Prakan\"             \"Samut Sakhon\"            \n[59] \"Samut Songkhram\"          \"Saraburi\"                \n[61] \"Satun\"                    \"Si Sa Ket\"               \n[63] \"Sing Buri\"                \"Songkhla\"                \n[65] \"Sukhothai\"                \"Suphan Buri\"             \n[67] \"Surat Thani\"              \"Surin\"                   \n[69] \"Tak\"                      \"Trang\"                   \n[71] \"Trat\"                     \"Ubon Ratchathani\"        \n[73] \"Udon Thani\"               \"Uthai Thani\"             \n[75] \"Uttaradit\"                \"Yala\"                    \n[77] \"Yasothon\"                \n```\n\n\n:::\n:::\n\n:::\n\nTaking a peek at the type of drug offenses,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(drugs$types_of_drug_offenses)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"drug_use_cases\"                                        \n [2] \"suspects_in_drug_use_cases\"                            \n [3] \"possession_cases\"                                      \n [4] \"suspects_in_possession_cases\"                          \n [5] \"possession_with_intent_to_distribute_cases\"            \n [6] \"suspects_in_possession_with_intent_to_distribute_cases\"\n [7] \"trafficking_cases\"                                     \n [8] \"suspects_in_trafficking_cases\"                         \n [9] \"production_cases\"                                      \n[10] \"suspects_in_production_cases\"                          \n[11] \"import_cases\"                                          \n[12] \"suspects_in_import_cases\"                              \n[13] \"export_cases\"                                          \n[14] \"suspects_in_export_cases\"                              \n[15] \"conspiracy_cases\"                                      \n[16] \"suspects_in_conspiracy_cases\"                          \n```\n\n\n:::\n:::\n\n\nWe will be only extracting the confirmed cases from the types of drug offenses.\n\nbecause\n\n\n\n\n\n\nWe will also break up the data into years for visualisation.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconfirmed_drug_offenses <- c(\n  \"drug_use_cases\", \"possession_cases\", \"possession_with_intent_to_distribute_cases\", \"trafficking_cases\", \"production_cases\", \"import_cases\", \"export_cases\", \"conspiracy_cases\"\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndrugs_by_year <- list()\n\nfor (year in 2017:2022) {\n  drugs_by_year[[as.character(year)]] <- left_join(thai, drugs, by = c(\"ADM1_EN\" = \"province_en\")) %>%\n    dplyr::select(1:3, 17:19,21) %>%\n    filter(fiscal_year == year, types_of_drug_offenses %in% confirmed_drug_offenses)\n}\n\nglimpse(drugs_by_year[[\"2018\"]])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 616\nColumns: 7\n$ Shape_Leng             <dbl> 2.417227, 2.417227, 2.417227, 2.417227, 2.41722…\n$ Shape_Area             <dbl> 0.13133873, 0.13133873, 0.13133873, 0.13133873,…\n$ ADM1_EN                <chr> \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Bangkok\", \"Ba…\n$ fiscal_year            <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,…\n$ types_of_drug_offenses <chr> \"drug_use_cases\", \"possession_cases\", \"possessi…\n$ no_cases               <dbl> 16480, 10643, 5875, 623, 180, 1, 1, 36, 3015, 3…\n$ geometry               <MULTIPOLYGON [°]> MULTIPOLYGON (((100.6139 13..., MU…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(drugs_by_year[[\"2018\"]]$types_of_drug_offenses)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"drug_use_cases\"                            \n[2] \"possession_cases\"                          \n[3] \"possession_with_intent_to_distribute_cases\"\n[4] \"trafficking_cases\"                         \n[5] \"production_cases\"                          \n[6] \"import_cases\"                              \n[7] \"export_cases\"                              \n[8] \"conspiracy_cases\"                          \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\nA quick view on the distribution of drug cases in each province:\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(2,3))\npar(mar = c(3,2,2,1))\nfor (year in 2017:2022) {\n  map <- tm_shape(drugs_by_year[[as.character(year)]]) +\n    tm_fill(\"no_cases\",\n            n = 5,\n            style = \"equal\") +  \n    tm_borders(alpha = 0.5) +\n    tm_layout(main.title = paste(\"Equal interval classification - Fiscal Year\", year))\n  \n  print(map)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.61, 0.61, 0.61, 0.56. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.61, 0.61, 0.56, 0.52. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.61, 0.61, 0.56, 0.52. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-13-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.61, 0.61, 0.61, 0.61. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-13-4.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.61, 0.61, 0.61, 0.56. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-13-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.61, 0.61, 0.61, 0.61. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-13-6.png){width=672}\n:::\n:::\n\n\n## Neighbour data\n\nAs vertical, horizontal and diagonal neighbours of the province are close enough to travel to and influence each other. We would be using Queen's contiguity neighbour criteria.\n\nTo get a quick view on the neighbours of the provinces, we can plot out the neighbours.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate contiguity neighbors\nnb <- st_contiguity(thai$geometry)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in spdep::poly2nb(geometry, queen = queen, ...): some observations have no neighbours;\nif this seems unexpected, try increasing the snap argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in spdep::poly2nb(geometry, queen = queen, ...): neighbour object has 2 sub-graphs;\nif this sub-graph count seems unexpected, try increasing the snap argument.\n```\n\n\n:::\n:::\n\n\nThe code has some warnings on having no neighbours.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot the neighbors\nplot(st_geometry(thai), border = 'gray')\nplot(nb, st_geometry(thai), col = 'red', add = TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nOn closer inspecting, one of the province in the bottom left is disconnected from the rest. It appears to be Phuket that is disconnected from the rest.\n\n![Close-up of neighbour plot](img\\Phuket_region.png){width=\"100%\" style=\"object-fit: contain;\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(nb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n14 with 1 link\n2 most connected regions:\n29 51 with 9 links\n```\n\n\n:::\n:::\n\n\nFrom the above we can see that region number 67 is without any neighbours. To retrieve the name of region 67 (index 67 in nb):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai$ADM1_EN[67]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Phuket\"\n```\n\n\n:::\n:::\n\n\nIt is confirmed that Phuket is disconnected from the rest.\n\n![Phuket Region](img\\Phuket_region.png){width=\"100%\" style=\"object-fit: contain;\"} \nLooking at the map, we can see that while **Phuket** is disconnected by water body, we can considered it to be the neighbour of **Phangnga**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhich(unique(thai$ADM1_EN) == \"Phangnga\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 66\n```\n\n\n:::\n:::\n\n\nFrom the code above, we now know the number for the \\***Phangnga** region (number 67) and we will manually add **Phuket** to **Phangnga** and **Phangnga** to **Phuket**.\n\nAdding **Phuket** to **Phangnga**\n\n**Warning: This code is not idempotent!**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnb[[66]] <- c(nb[[66]], as.integer(67))\n```\n:::\n\n\nAdding **Phangnga** to **Phuket**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnb[[67]] <- as.integer(c(66))\n```\n:::\n\n\nEnsure that all regions are connected\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(nb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 354 \nPercentage nonzero weights: 5.970653 \nAverage number of links: 4.597403 \n2 disjoint connected subgraphs\nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 \n 2  5 16 16 17 10  5  4  2 \n2 least connected regions:\n14 67 with 1 link\n2 most connected regions:\n29 51 with 9 links\n```\n\n\n:::\n:::\n\n\n**Phuket** and **Phangnga** should now be connected when plotting the neighbour\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(thai), border = 'gray')\nplot(nb, st_geometry(thai), col = 'red', add = TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n# Global Moran\n\n::: panel-tabset\n### 2017\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q2017 <- drugs_by_year[[\"2017\"]] %>%\n  group_by(ADM1_EN) %>%  \n  summarise(no_cases = sum(no_cases, na.rm = TRUE)) %>%  \n  ungroup() %>%\n  mutate(nb = nb,  \n         wt = st_weights(nb, style = \"W\"),  \n         .before = 1)\n\nglimpse(wm_q2017)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 77\nColumns: 5\n$ nb       <nb> <2, 3, 4, 15, 59, 60>, <1, 15>, <1, 4, 5, 59>, <1, 3, 5, 10, 1…\n$ wt       <list> <0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.16…\n$ ADM1_EN  <chr> \"Amnat Charoen\", \"Ang Thong\", \"Bangkok\", \"Bueng Kan\", \"Buri R…\n$ no_cases <dbl> 2499, 748, 28747, 2070, 2411, 4566, 729, 3134, 1952, 7438, 41…\n$ geometry <GEOMETRY [°]> POLYGON ((104.9598 16.28368..., POLYGON ((100.3329 1…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q2017 <- drugs_by_year[[\"2017\"]] %>%\n  mutate(nb = nb,\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1)\n```\n:::\n\n\n### 2018\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q2018 <- drugs_by_year[[\"2018\"]] %>%\n  group_by(ADM1_EN) %>%  \n  summarise(no_cases = sum(no_cases, na.rm = TRUE)) %>%  \n  ungroup() %>%\n  mutate(nb = nb,  \n         wt = st_weights(nb, style = \"W\"), \n         .before = 1)\n\nglimpse(wm_q2018)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 77\nColumns: 5\n$ nb       <nb> <2, 3, 4, 15, 59, 60>, <1, 15>, <1, 4, 5, 59>, <1, 3, 5, 10, 1…\n$ wt       <list> <0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.16…\n$ ADM1_EN  <chr> \"Amnat Charoen\", \"Ang Thong\", \"Bangkok\", \"Bueng Kan\", \"Buri R…\n$ no_cases <dbl> 2768, 1318, 33839, 2070, 4213, 4261, 1060, 5525, 2670, 9127, …\n$ geometry <GEOMETRY [°]> POLYGON ((104.9598 16.28368..., POLYGON ((100.3329 1…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q2018 <- drugs_by_year[[\"2018\"]] %>%\n  mutate(nb = nb,\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1)\n```\n:::\n\n\n### 2019\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q2019 <- drugs_by_year[[\"2019\"]] %>%\n  group_by(ADM1_EN) %>%  \n  summarise(no_cases = sum(no_cases, na.rm = TRUE)) %>%  \n  ungroup() %>%\n  mutate(nb = nb,  \n         wt = st_weights(nb, style = \"W\"),  \n         .before = 1)\n\nglimpse(wm_q2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 77\nColumns: 5\n$ nb       <nb> <2, 3, 4, 15, 59, 60>, <1, 15>, <1, 4, 5, 59>, <1, 3, 5, 10, 1…\n$ wt       <list> <0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.16…\n$ ADM1_EN  <chr> \"Amnat Charoen\", \"Ang Thong\", \"Bangkok\", \"Bueng Kan\", \"Buri R…\n$ no_cases <dbl> 3609, 1364, 30094, 2256, 6013, 4471, 1579, 7307, 2888, 10579,…\n$ geometry <GEOMETRY [°]> POLYGON ((104.9598 16.28368..., POLYGON ((100.3329 1…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q2019 <- drugs_by_year[[\"2019\"]] %>%\n  mutate(nb = nb,\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1)\n```\n:::\n\n\n### 2020\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q2020 <- drugs_by_year[[\"2020\"]] %>%\n  group_by(ADM1_EN) %>% \n  summarise(no_cases = sum(no_cases, na.rm = TRUE)) %>%  # Summarize cases per province\n  ungroup() %>%\n  mutate(nb = nb,  \n         wt = st_weights(nb, style = \"W\"), \n         .before = 1)\n\nglimpse(wm_q2020)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 77\nColumns: 5\n$ nb       <nb> <2, 3, 4, 15, 59, 60>, <1, 15>, <1, 4, 5, 59>, <1, 3, 5, 10, 1…\n$ wt       <list> <0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.16…\n$ ADM1_EN  <chr> \"Amnat Charoen\", \"Ang Thong\", \"Bangkok\", \"Bueng Kan\", \"Buri R…\n$ no_cases <dbl> 1920, 1291, 21539, 2976, 3311, 4561, 1532, 4108, 2917, 11194,…\n$ geometry <GEOMETRY [°]> POLYGON ((104.9598 16.28368..., POLYGON ((100.3329 1…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q2020 <- drugs_by_year[[\"2020\"]] %>%\n  mutate(nb = nb,\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1)\n```\n:::\n\n\n### 2021\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q2021 <- drugs_by_year[[\"2021\"]] %>%\n  group_by(ADM1_EN) %>% \n  summarise(no_cases = sum(no_cases, na.rm = TRUE)) %>%  # Summarize cases per province\n  ungroup() %>%\n  mutate(nb = nb,  \n         wt = st_weights(nb, style = \"W\"), \n         .before = 1)\n\nglimpse(wm_q2021)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 77\nColumns: 5\n$ nb       <nb> <2, 3, 4, 15, 59, 60>, <1, 15>, <1, 4, 5, 59>, <1, 3, 5, 10, 1…\n$ wt       <list> <0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.16…\n$ ADM1_EN  <chr> \"Amnat Charoen\", \"Ang Thong\", \"Bangkok\", \"Bueng Kan\", \"Buri R…\n$ no_cases <dbl> 4400, 1723, 18151, 4483, 7752, 6068, 1542, 7496, 3277, 14160,…\n$ geometry <GEOMETRY [°]> POLYGON ((104.9598 16.28368..., POLYGON ((100.3329 1…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q2021 <- drugs_by_year[[\"2021\"]] %>%\n  mutate(nb = nb,\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1)\n```\n:::\n\n\n### 2022\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q2022 <- drugs_by_year[[\"2022\"]] %>%\n  group_by(ADM1_EN) %>% \n  summarise(no_cases = sum(no_cases, na.rm = TRUE)) %>%  # Summarize cases per province\n  ungroup() %>%\n  mutate(nb = nb,  \n         wt = st_weights(nb, style = \"W\"), \n         .before = 1)\n\nglimpse(wm_q2022)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 77\nColumns: 5\n$ nb       <nb> <2, 3, 4, 15, 59, 60>, <1, 15>, <1, 4, 5, 59>, <1, 3, 5, 10, 1…\n$ wt       <list> <0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.16…\n$ ADM1_EN  <chr> \"Amnat Charoen\", \"Ang Thong\", \"Bangkok\", \"Bueng Kan\", \"Buri R…\n$ no_cases <dbl> 2188, 1438, 6107, 3345, 3971, 2383, 1049, 4166, 1791, 6967, 4…\n$ geometry <GEOMETRY [°]> POLYGON ((104.9598 16.28368..., POLYGON ((100.3329 1…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q2022 <- drugs_by_year[[\"2022\"]] %>%\n  mutate(nb = nb,\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1)\n```\n:::\n\n\n:::\n\n## quick glance at global moran\n\n::: panel-tabset\n### 2017\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI2017 <- global_moran(wm_q2017$no_cases,\n                       wm_q2017$nb,\n                       wm_q2017$wt)\nglimpse(moranI2017)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num -0.0697\n $ K: num 31.8\n```\n\n\n:::\n:::\n\n\n### 2018\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI2018 <- global_moran(wm_q2018$no_cases,\n                       wm_q2018$nb,\n                       wm_q2018$wt)\nglimpse(moranI2018)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num -0.0844\n $ K: num 30.2\n```\n\n\n:::\n:::\n\n\n### 2019\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI2019 <- global_moran(wm_q2019$no_cases,\n                       wm_q2019$nb,\n                       wm_q2019$wt)\nglimpse(moranI2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num -0.0905\n $ K: num 18.4\n```\n\n\n:::\n:::\n\n\n### 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI2020 <- global_moran(wm_q2020$no_cases,\n                       wm_q2020$nb,\n                       wm_q2020$wt)\nglimpse(moranI2020)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num -0.0473\n $ K: num 12.2\n```\n\n\n:::\n:::\n\n\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI2021 <- global_moran(wm_q2021$no_cases,\n                       wm_q2021$nb,\n                       wm_q2021$wt)\nglimpse(moranI2021)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num -0.0199\n $ K: num 5.54\n```\n\n\n:::\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI2022 <- global_moran(wm_q2022$no_cases,\n                       wm_q2022$nb,\n                       wm_q2022$wt)\nglimpse(moranI2022)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num 0.0408\n $ K: num 3.29\n```\n\n\n:::\n:::\n\n\n:::\n\n\n\nTo make the data reproducible we would set the seed to a specify value\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(12345)\n```\n:::\n\n\n## permutations\n\n::: panel-tabset\n### 2017\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q2017$no_cases,\n                       wm_q2017$nb,\n                       wm_q2017$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = -0.069721, observed rank = 13, p-value = 0.26\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n### 2018\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q2018$no_cases,\n                       wm_q2018$nb,\n                       wm_q2018$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = -0.084421, observed rank = 10, p-value = 0.2\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n### 2019\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q2019$no_cases,\n                       wm_q2019$nb,\n                       wm_q2019$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = -0.090517, observed rank = 9, p-value = 0.18\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n### 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q2020$no_cases,\n                       wm_q2020$nb,\n                       wm_q2020$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = -0.047281, observed rank = 31, p-value = 0.62\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q2021$no_cases,\n                       wm_q2021$nb,\n                       wm_q2021$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = -0.019865, observed rank = 54, p-value = 0.92\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q2022$no_cases,\n                       wm_q2022$nb,\n                       wm_q2022$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.040794, observed rank = 76, p-value = 0.48\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n:::\n\n## Inference\nFrom the global Moran's I test, we can infer that \n\n\n\n\n\n\n\n\n\n\n# Local Moran\n\nNull hypothesis: The usage of drugs at one province do not depend on values at neighbouring province(s) and that the key indicators of drug abuse of Thailand are independent from space.\n\n\n\n\n\n\n\n::: panel-tabset\n### 2017\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa2017 <- wm_q2017 %>% \n  mutate(local_moran = local_moran(\n    no_cases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n### 2018\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa2018 <- wm_q2018 %>% \n  mutate(local_moran = local_moran(\n    no_cases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n### 2019\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa2019 <- wm_q2019 %>% \n  mutate(local_moran = local_moran(\n    no_cases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n### 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa2020 <- wm_q2020 %>% \n  mutate(local_moran = local_moran(\n    no_cases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa2021 <- wm_q2021 %>% \n  mutate(local_moran = local_moran(\n    no_cases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa2022 <- wm_q2022 %>% \n  mutate(local_moran = local_moran(\n    no_cases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n:::\n\n:::\n\nIn order to identify if we should use p_ii or ii values for the visualisation, we need to identify how skewed the data are.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnum_greater_than_05 <- sum(abs(lisa2017$skewness) > 0.5)\npercentage <- (num_greater_than_05 / nrow(lisa2017)) * 100\n\nprint(paste0(\"Percentage of rows with abs(skewness) > 0.5: \", round(percentage, 2), \"%\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Percentage of rows with abs(skewness) > 0.5: 100%\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(lisa2017$skewness, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Skewness\")\nabline(v=0, \n       col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-55-1.png){width=672}\n:::\n:::\n\n\nSince the data is evidently skewed, we would use the median instead of the mean to visualise the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(lisa2017$skewness, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Skewness\")\nabline(v=0, \n       col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-56-1.png){width=672}\n:::\n:::\n\n\nSince the data is highly skewed we will be using the median\n\nfor comparison\n\n::: panel-tabset\n### 2017\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa2017) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of No of cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa2017) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-57-1.png){width=672}\n:::\n:::\n\n\n### 2018\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa2018) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of No of cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa2018) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-58-1.png){width=672}\n:::\n:::\n\n\n### 2019\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa2019) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of No of cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa2019) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-59-1.png){width=672}\n:::\n:::\n\n\n### 2020\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa2020) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of No of cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa2020) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-60-1.png){width=672}\n:::\n:::\n\n\n### 2021\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa2021) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of No of cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa2021) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-61-1.png){width=672}\n:::\n:::\n\n\n### 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa2022) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of No of cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa2022) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-62-1.png){width=672}\n:::\n:::\n\n\n:::\n\n\n\n## visualising significance\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa2017_sig <- lisa2017 %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(lisa2017) +\n  tm_polygons() + \n  tm_borders(alpha = 0.5) + \n  tm_shape(lisa2017_sig) + \n  tm_fill(\"median\") +\n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-63-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa2018_sig <- lisa2018 %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(lisa2018) +\n  tm_polygons() + \n  tm_borders(alpha = 0.5) + \n  tm_shape(lisa2018_sig) + \n  tm_fill(\"median\") +\n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-64-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa2019_sig <- lisa2019 %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(lisa2019) +\n  tm_polygons() + \n  tm_borders(alpha = 0.5) + \n  tm_shape(lisa2019_sig) + \n  tm_fill(\"median\") +\n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-65-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa2020_sig <- lisa2020 %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(lisa2020) +\n  tm_polygons() + \n  tm_borders(alpha = 0.5) + \n  tm_shape(lisa2020_sig) + \n  tm_fill(\"median\") +\n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-66-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa2021_sig <- lisa2021 %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(lisa2021) +\n  tm_polygons() + \n  tm_borders(alpha = 0.5) + \n  tm_shape(lisa2021_sig) + \n  tm_fill(\"median\") +\n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-67-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa2022_sig <- lisa2022 %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(lisa2022) +\n  tm_polygons() + \n  tm_borders(alpha = 0.5) + \n  tm_shape(lisa2022_sig) + \n  tm_fill(\"median\") +\n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-68-1.png){width=672}\n:::\n:::\n\n\n\n\n\nyear 2022 decriminalised drugs\n\n\n\n\n\n\n## Local Gi\\* statistics\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}